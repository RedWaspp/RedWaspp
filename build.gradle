plugins {
	id 'java'
	id 'maven-publish'
	id 'org.springframework.boot' version '2.5.12'
	id 'gradle-boost' version '4.0.0'
	id 'org.sonarqube' version '3.3'
	id 'jacoco'
}

group = 'com.ford.cvas'
version = gradleBoost.fn.gitVersion()
sourceCompatibility = '11'
println "Build Version = ${version ?: '[none]'}"



dependencies {
	// Bill Of Materials Imports
	bomImport platform('org.springframework.cloud:spring-cloud-dependencies:2020.0.3')
	bomImport platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
	bomImport platform('io.pivotal.spring.cloud:spring-cloud-services-dependencies:2.4.1')

	//Core libraries
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'com.ford.cloudnative:spring-boot-starter-ford:3.0.0'

	//swagger
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'


	// Database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.microsoft.sqlserver:mssql-jdbc'
	localOnly 'com.h2database:h2'

	// Utility
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'


	// Tests
	testImplementation 'com.ford.cloudnative:spring-base-test:3.1.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
	testImplementation 'org.mockito:mockito-core:4.2.0'

	///BEGIN - CVE Patches - overriding transitive dependencies to address CVE's
	implementation("net.minidev:json-smart") {
		version {
			strictly "2.4.7"
		}
		because "patch CVE brought in by Spring, Outh, etc."
	}
	///END - CVE Patches

	gradleBoost {
		sonarqube {
			properties = [
					'sonar.login'              : 'dfcf05ca0ef77e0e87e86d838e8ab69fae84696b',
					'sonar.projectKey'         : 'com.ford.pae:CvasEvapPurgeService',
					'sonar.java.coveragePlugin': 'jacoco',
					'sonar.coverage.jacoco.xmlReportPaths': 'build/reports/jacoco/test/jacocoTestReport.xml',
					'sonar.coverage.exclusions': '',
					'sonar.projectName'        : 'cvas-evap-purge-service'
			]
		}
	}
}

test {
	finalizedBy jacocoTestReport
	useJUnitPlatform {
		excludeEngines 'junit-vintage'
	}
}

jacocoTestReport {
	dependsOn test
	reports {
		// SonarQube requires a code coverage report in XML format
		xml.enabled true
	}
}

// Adds the 'test' task as a dependency of the 'sonarqube' task
// As of SonarQube Gradle plugin v3.0, this functionality is no longer default, so we re-enable it here
project.tasks['sonarqube'].dependsOn('test')
